{
  "StartAt": "DEREGISTERED",
  "States": {
    "DEREGISTERED": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.event",
          "StringEquals": "REGISTER_REQUEST",
          "Next": "REGISTERING"
        }
      ],
      "Default": "DEREGISTERED"
    },
    "REGISTERING": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:regionname:function:HandleRegister",
      "Next": "REGISTERED"
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "DEREGISTERED"
        }
      ]
    },
    "REREGISTERING": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:regionname:function:HandleUpdateRegister",
      "Next": "REGISTERED"
    },
    "REGISTERED": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.event",
          "StringEquals": "DEREGISTER_REQUEST",
          "Next": "DEREGISTERING"
        },
        {
          "Variable": "$.event",
          "StringEquals": "CONNECTION_REQUEST",
          "Next": "CONNECTING"
        },
        {
          "Variable": "$.event",
          "StringEquals": "UPDATE_REGISTER_REQUEST",
          "Next": "CONNECTING"
        }
      ],
      "Default": "CONNECTED"
    },
    "DEREGISTERING": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:regionname:function:HandleDeRegister",
      "Next": "DEREGISTERED"
    },
    "CONNECTING": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:regionname:function:HandleConnectionRequest",
      "Next": "CONNECTED"
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "REGISTERED"
        }
      ]
    },
    "CONNECTED": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.event",
          "StringEquals": "N2_RELEASE",
          "Next": "CONNECTION_RELEASING"
        },
        {
          "Variable": "$.event",
          "StringEquals": "DE-REGISTER_EVENT",
          "Next": "DEREGISTERING"
        },
        {
          "Variable": "$.event",
          "StringEquals": "REGISTER_EVENT",
          "Next": "REGISTERING"
        }
      ],
      "Default": "CONNECTED"
    }
     "IDLE": {
      "Type": "Choice",
      "Choices": [
       {
          "Variable": "$.event",
          "StringEquals": "SERVICE_REQUEST",
          "Next": "SERVICE_REQUESTED"
        },
        {
          "Variable": "$.event",
          "StringEquals": "N2_CONNECT",
          "Next": "CONNECTED"
        },
        {
          "Variable": "$.event",
          "StringEquals": "DE-REGISTER_EVENT",
          "Next": "DEREGISTERING"
        },
        {
          "Variable": "$.event",
          "StringEquals": "REGISTER_EVENT",
          "Next": "REGISTERING"
        }
      ],
      "Default": "IDLE"
    }
    "CONNECTION_RELEASING": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:regionname:function:HandleConnectionRelease",
      "Next": "IDLE"
    }
     "SERVICE_REQUESTED": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:regionname:function:HandleServiceRequest",
      "Next": "CONNECTED"
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "IDLE"
        }
      ]
    }
  }
}
