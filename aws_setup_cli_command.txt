aws dynamodb create-table \
    --table-name UEStateTable \
    --attribute-definitions AttributeName=UE_ID,AttributeType=S \
    --key-schema AttributeName=UE_ID,KeyType=HASH \
    --billing-mode PAY_PER_REQUEST


aws events put-rule \
    --name "UEEventRule" \
    --event-pattern '{
        "source": ["5GCore"],
        "detail-type": [
            "RegisterRequest", 
            "SessionEstablishment", 
            "InactivityDetected", 
            "PagingResponse", 
            "DeregistrationRequest"
        ]
    }'


aws iam create-role \
    --role-name LambdaExecutionRole \
    --assume-role-policy-document '{
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Principal": {
                    "Service": "lambda.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
            }
        ]
    }'


aws iam attach-role-policy \
    --role-name LambdaExecutionRole \
    --policy-arn arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess

aws iam attach-role-policy \
    --role-name LambdaExecutionRole \
    --policy-arn arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess



zip update_state.zip update_state.py

aws lambda create-function \
    --function-name UpdateUEState \
    --runtime python3.8 \
    --role arn:aws:iam::<AWS_ACCOUNT_ID>:role/LambdaExecutionRole \
    --handler update_state.lambda_handler \
    --zip-file fileb://update_state.zip


zip send_event.zip send_event.py

aws lambda create-function \
    --function-name SendUEEvent \
    --runtime python3.8 \
    --role arn:aws:iam::<AWS_ACCOUNT_ID>:role/LambdaExecutionRole \
    --handler send_event.lambda_handler \
    --zip-file fileb://send_event.zip

aws stepfunctions create-state-machine \
    --name UEStateMachine \
    --role-arn arn:aws:iam::<AWS_ACCOUNT_ID>:role/LambdaExecutionRole \
    --definition file://ue_fsm.json

aws events put-targets \
    --rule "UEEventRule" \
    --targets "Id"="1","Arn"="arn:aws:states:<AWS_REGION>:<AWS_ACCOUNT_ID>:stateMachine:UEStateMachine"

aws lambda invoke \
    --function-name SendUEEvent \
    --payload '{"ue_id": "1234", "eventType": "RegisterRequest"}' \
    response.json


aws dynamodb get-item \
    --table-name UEStateTable \
    --key '{"UE_ID": {"S": "1234"}}'



